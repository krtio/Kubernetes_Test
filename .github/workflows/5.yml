name: Build Image and Push to ECR (CI) & Deploy to ArgoCD (CD)
 
on: 
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: write

jobs:
  build-and-push:
    strategy:
      matrix:
        service: [frontend, backend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          role-to-assume: ${{ secrets.ARN_ECR_PUSH_ROLE }}
          role-session-name: ecrPrivatePushRole

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Image Version Tag
        id: set-var
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          
          if [ "${{ matrix.service }}" == "frontend" ]; then
            echo "ECR_REPOSITORY=eduprorepository-frontend" >> $GITHUB_ENV
            PREFIX="fv"
          else
            echo "ECR_REPOSITORY=eduprorepository-backend" >> $GITHUB_ENV
            PREFIX="bv"
          fi
          
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E "^${PREFIX}[0-9]+$" | head -n 1)

          if [[ -z "$LATEST_TAG" ]]; then
            NEW_TAG="${PREFIX}1"
          else
            TAG_NUMBER=$(echo "$LATEST_TAG" | sed "s/${PREFIX}//")
            NEW_TAG="${PREFIX}$((TAG_NUMBER + 1))"
          fi

          echo "IMAGE_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "IMAGE_TAG=$NEW_TAG" >> $GITHUB_OUTPUT
          echo "New Image Tag for ${{ matrix.service }}: $NEW_TAG"

      - name: Build Docker Image
        run: |
          docker build -f ${{ matrix.service }}/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

      - name: Push Docker Image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Update image tag in values.yaml
        run: |
          if [ "${{ matrix.service }}" == "frontend" ]; then
            sed -i "/frontend:/,/tag:/s/tag: fv[0-9]\+/tag: $IMAGE_TAG/" eduprorepository/values.yaml
            sed -i "/frontend:/,/tag:/s/tag: fv[0-9]\+/tag: $IMAGE_TAG/" eduprorepository/values-prod.yaml
          else
            sed -i "/backend:/,/tag:/s/tag: bv[0-9]\+/tag: $IMAGE_TAG/" eduprorepository/values.yaml
            sed -i "/backend:/,/tag:/s/tag: bv[0-9]\+/tag: $IMAGE_TAG/" eduprorepository/values-prod.yaml
          fi

      - name: Commit and Push Changes to values.yaml
        run: |
          git config user.name "krtio"
          git config user.email "minwoo0612k@naver.com"

          git add eduprorepository/values.yaml eduprorepository/values-prod.yaml

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update ${{ matrix.service }} image tag to $IMAGE_TAG" --author "krtio <minwoo0612k@naver.com>"
            
            git pull --rebase origin main || (git rebase --abort && git pull --no-rebase origin main)
            git push origin main
          fi

      - name: Create Git Tag for Versioning
        run: |
          if git rev-parse "$IMAGE_TAG" >/dev/null 2>&1; then
            git tag -d "$IMAGE_TAG"
            git push origin --delete "$IMAGE_TAG"
          fi
          
          git tag "$IMAGE_TAG"
          git push origin "$IMAGE_TAG"
