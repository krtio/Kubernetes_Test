name: Build Images and Push to ECR (CI) & Deploy to ArgoCD (CD)

on:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: write

jobs:
  ci:
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAGS: ${{ steps.set-var.outputs.IMAGE_TAGS }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          role-to-assume: ${{ secrets.ARN_ECR_PUSH_ROLE }}
          role-session-name: ecrPrivatePushRole

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set Environment Variables
        id: set-var
        run: |
          echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV
          echo "ECR_REPOSITORY=eduproproduction" >> $GITHUB_ENV

          SERVICES=("index" "login" "logout" "quiz")
          TAGS=()

          for SERVICE in "${SERVICES[@]}"; do
            LATEST_TAG=$(git tag --sort=-v:refname | grep -E "^${SERVICE}v[0-9]+$" | head -n 1)

            if [[ -z "$LATEST_TAG" ]]; then
              NEW_TAG="${SERVICE}v1"
            else
              TAG_NUMBER=$(echo $LATEST_TAG | sed "s/${SERVICE}v//")
              NEW_TAG="${SERVICE}v$((TAG_NUMBER + 1))"
            fi

            echo "${SERVICE^^}_IMAGE_TAG=$NEW_TAG" >> $GITHUB_ENV
            TAGS+=("$NEW_TAG")
          done

          echo "IMAGE_TAGS=${TAGS[@]}" >> $GITHUB_OUTPUT
          echo "New image tags: ${TAGS[@]}"

      - name: Build and Push Docker Images
        run: |
          SERVICES=("index" "login" "logout" "quiz")

          for SERVICE in "${SERVICES[@]}"; do
            IMAGE_TAG="${SERVICE^^}_IMAGE_TAG"
            TAG_VALUE=${!IMAGE_TAG}

            echo "Building and pushing $SERVICE with tag $TAG_VALUE..."

            docker build -f $SERVICE/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$TAG_VALUE .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$TAG_VALUE
          done

      - name: Update tags in values.yaml
        run: |
          for SERVICE in index login logout quiz; do
            IMAGE_TAG="${SERVICE^^}_IMAGE_TAG"
            TAG_VALUE=${!IMAGE_TAG}

            echo "Updating $SERVICE tag to $TAG_VALUE in values.yaml..."
            sed -i "s%${SERVICE}: .*%${SERVICE}: $TAG_VALUE%" eduproproduction/values.yaml
          done

      - name: Commit and Push Changes to values.yaml
        run: |
          git config user.name "krtio"
          git config user.email "minwoo0612k@naver.com"
          git add eduproproduction/values.yaml
          git commit -m "Update image tags: ${{ steps.set-var.outputs.IMAGE_TAGS }}" --author "krtio <minwoo0612k@naver.com>" --allow-empty
          git push origin main

      - name: Create Git Tags for Versioning
        run: |
          for SERVICE in index login logout quiz; do
            IMAGE_TAG="${SERVICE^^}_IMAGE_TAG"
            TAG_VALUE=${!IMAGE_TAG}

            echo "Creating Git tag $TAG_VALUE..."
            git tag -f $TAG_VALUE
            git push origin $TAG_VALUE --force
          done
